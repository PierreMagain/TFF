name: Docker CI

on:
  repository_dispatch:
    types: [docker-ci-trigger]

jobs:
  docker_build:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Build Docker image
        run: |
          cd tff_webdev
          docker image build -t ${{ secrets.DOCKER_REGISTRY_USER }}/tff_image:latest .

  docker_push:
    runs-on: self-hosted
    needs: docker_build
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_REGISTRY_USER }}/tff_image:latest

  scp_manifest:
    runs-on: self-hosted
    needs: docker_push
    steps:
      - name: Copy manifest_tff.yml to remote server
        run: |
          scp -o StrictHostKeyChecking=no manifest_tff.yml azureuser@master:/home/azureuser/

  k8s_deploy:
    runs-on: self-hosted
    needs: scp_manifest
    steps:
      - name: SSH into remote server and deploy Kubernetes resources
        run: |
          ssh -o StrictHostKeyChecking=no azureuser@master << EOF
            source ~/.bashrc
            # Check if the deployment exists and delete it if it does
            if kubectl get deployment tff-dep; then
              kubectl delete deployment tff-dep
            fi

            # Check if the service exists and delete it if it does
            if kubectl get service tff-svc; then
              kubectl delete service tff-svc
            fi

            # Apply the new deployment configuration
            kubectl apply -f /home/azureuser/manifest_tff.yml
          EOF
